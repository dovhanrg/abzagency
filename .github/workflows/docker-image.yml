name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:

  build-server:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Check out code

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: dovhanrg/abz-server
          tags: latest, ${{ github.sha }}
          registry: docker.io
          dockerfile: ./server/Dockerfile
          directory: ./server/
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
#          buildArgs: NODE_ENV=${{ secrets.NODE_ENV }}, IP_ADDR=${{ secrets.IP_ADDR }}, DB_HOST=${{ secrets.DB_HOST }}, DB_PORT=3306, DB_USERNAME=${{ secrets.DB_USERNAME }}, DB_PASSWORD=${{ secrets.DB_PASSWORD }}, DATABASE=${{ secrets.DATABASE }}

  build-client:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Check out code

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: dovhanrg/abz-client
          tags: latest, ${{ github.sha }}
          registry: docker.io
          dockerfile: ./client/Dockerfile
          directory: ./client/
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:

    runs-on: ubuntu-latest

    needs:
      - build-server
      - build-client

    steps:
      - name: show env
        run: env

      - name: show vars
        run: vars

      - name: show dir
        run: ls -al

      - name: Check out code
        uses: actions/checkout@v3

      - name: show dor after checkout
        run: ls -al

      - name: Test ssh-agent
        run: which ssh-agent

      - name: Connecting to remote server
        run: |
          ${{ secrets.SSH_PRIVATE_KEY }} | tr -d '\r' | ssh-add -
          ssh -o "StrictHostKeyChecking accept-new" deploy-bot@${{ vars.SERVER_ADDRESS }} "echo 'Logging in'"



